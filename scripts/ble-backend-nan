#! /usr/bin/env bash
#
usage=$"Usage: ble-backend 
    -command=starttest -totalcount=num -deviceid=12
    -command=nok_ident -maclist=ffff
    -command=nok_ident -maclist=0102
    -command=nok_ident -maclist=stop
    -command=allon
    -command=alloff
    -command=allkickout
    -command=indrgb -color=0/1/2/3
\n"

if [ $# -eq 0 ]; then
  printf "${usage}"
  exit 1
fi

while [ $# -gt 0 ]; do
  case $1 in
    --help|-h)
      printf "${usage}"
      exit 0
      ;;
    -command=starttest)
      echo "**$1 $2 $3**"
      # for i in {1..30}; do echo "hello, $i"; sleep 1; done
      sleep 3
      # act as failure
      # exit 1
      for i in {1..50}; do
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime) VALUES(13, 1, '3.1', -65, -65, -33, -33, 'f4:bc:da:70:4c:20', '010203040506', 11111, 11111, true, true, true, true, now())"
      if [ $i -eq 5 ]; then
        mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime) VALUES(13, 1, '3.1', -65, -65, -33, -33, 'f4:bc:da:70:4c:20', '010203040506', 21111, 21111, false, true, true, true, now())"
        mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime) VALUES(13, 1, '3.1', -65, -65, -33, -33, 'f4:bc:da:70:4c:20', '010203040506', 11111, 11111, true, false, true, true, now())"
        mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime) VALUES(13, 1, '3.1', -65, -65, -33, -33, 'f4:bc:da:70:4c:20', '010203040506', 11111, 11111, true, true, false, true, now())"
        mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime) VALUES(13, 1, '3.1', -65, -65, -33, -33, 'f4:bc:da:70:4c:20', '010203040506', 11111, 11111, true, true, true, false, now())"
      fi
      done
      sleep 5
      exit 0
      ;;
    -command=allon)
      echo "**$1**"
      sleep 5
      exit 0
      ;;
    -command=alloff)
      echo "**$1**"
      sleep 5
      exit 0
      ;;
    -command=nok_ident)
      if [ "$2" == "-maclist=ffff" ]; then
          echo "**$1 $2**"
          sleep 1
          exit 0
      fi
      if [ "$2" == "-maclist=stop" ]; then
          echo "**$1 $2**"
          sleep 1
          exit 0
      fi
      maclist=$(echo "$2" | awk -F= '{print $2}')
      echo "**$1 $2**"
      sleep 1
      exit 0
      ;;
    -command=allkickout)
      echo "**$1**"
      sleep 5
      exit 0
      ;;
    -command=indrgb)
      if [ "$2" == "-color=0" ]; then
        echo "**$1 $2**"
        sleep 1
        exit 0
      elif [ "$2" == "-color=1" ]; then
        echo "**$1 $2**"
        sleep 1
        exit 0
      elif [ "$2" == "-color=2" ]; then
        echo "**$1 $2**"
        sleep 1
        exit 0
      elif [ "$2" == "-color=3" ]; then
        echo "**$1 $2**"
        sleep 1
        exit 0
      else
        echo "invalid parameter"
        exit 1
      fi
      ;;
    *)
      # continue
      shift
      ;;
  esac
  shift || true
done

printf "Invalid input\n"
printf "${usage}"
exit 1
